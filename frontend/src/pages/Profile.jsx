import { useEffect, useState, useCallback } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";

const API_URL = "http://localhost:5000/api";

function Profile() {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  const fetchUserData = useCallback(async () => {
    const token = localStorage.getItem("token");

    if (!token) {
      setError("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.");
      setLoading(false);
      return;
    }

    try {
      const response = await axios.get(`${API_URL}/users/me`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setUser(response.data);
    } catch (error) {
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    } finally {
      setLoading(false);
    }
  }, []);

  useEffect(() => {
    fetchUserData();
  }, [fetchUserData]);

  const handleLogout = () => {
    localStorage.removeItem("token");
    localStorage.removeItem("userRole");
    navigate("/login");
  };

  const handleEditProfile = async () => {
    const newName = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:", user.name);
    if (!newName) return;

    try {
      const token = localStorage.getItem("token");
      const response = await axios.put(
        `${API_URL}/users/${user._id}`,
        { name: newName },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setUser(response.data);
      alert("–ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!");
    } catch (error) {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.");
    }
  };

  if (loading) return <p className="loading">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p className="error">‚ùå {error}</p>;

  return (
    <div className="profile-container">
      <h2 className="text-2xl font-bold">üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
      <p><strong>–ò–º—è:</strong> {user.name}</p>
      <p><strong>–§–∞–º–∏–ª–∏—è:</strong> {user.surname}</p>
      <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {user.phone}</p>
      <p><strong>–†–æ–ª—å:</strong> {user.role}</p>

      <div className="button-group">
        {(user.role === "admin" || user.role === "moderator") && (
          <button onClick={handleEditProfile} className="btn-primary">‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</button>
        )}
        <button onClick={handleLogout} className="btn-danger">üö™ –í—ã–π—Ç–∏</button>
      </div>

      <h3 className="text-xl mt-4">üì¶ –õ–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</h3>
      {user.history.length > 0 ? (
        <ul className="history-list">
          {user.history.map((trip, index) => (
            <li key={index}>
              üìÖ <strong>{trip.date}</strong> | {trip.route?.name || "–ú–∞—Ä—à—Ä—É—Ç —É–¥–∞–ª—ë–Ω"} | –ú–µ—Å—Ç–æ: {trip.seat}
            </li>
          ))}
        </ul>
      ) : (
        <p className="no-history">‚ùå –£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –ø–æ–µ–∑–¥–æ–∫.</p>
      )}
    </div>
  );
}

export default Profile;